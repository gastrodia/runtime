import {Dispatcher} from '../../common/lang/Dispatcher';
import {Application} from '../Application';

//==========================================================
// <T>视窗。</T>
//==========================================================
export class View extends Dispatcher{
   // 应用
   public application: Application = null;
   // 激活状态
   public statusSetup: boolean = false;
   // 激活状态
   public statusActive: boolean = false;
   // 可见状态
   public statusVisible: boolean = false;

   //==========================================================
   // <T>配置处理。</T>
   //==========================================================
   public onSetup() {
   }

   //==========================================================
   // <T>配置处理。</T>
   //==========================================================
   public setup(): void {
      if (!this.statusSetup) {
         this.onSetup();
         this.statusSetup = true;
      }
   }

   //==========================================================
   // <T>激活处理。</T>
   //==========================================================
   public onActive() {
   }

   //==========================================================
   // <T>设置可见性。</T>
   //==========================================================
   public setVisible(visible: boolean) {
   }

   //==========================================================
   // <T>激活处理。</T>
   //==========================================================
   public active() {
      if (!this.statusActive) {
         this.onActive();
         this.statusActive = true;
      }
   }

   //==========================================================
   // <T>显示处理。</T>
   //==========================================================
   public show() {
      if (!this.statusVisible) {
         this.setVisible(true);
         this.statusVisible = true;
      }
   }

   //==========================================================
   // <T>隐藏处理。</T>
   //==========================================================
   public hide() {
      if (this.statusVisible) {
         this.setVisible(false)
         this.statusVisible = false;
      }
   }

   //==========================================================
   // <T>取消激活处理。</T>
   //==========================================================
   public onDeactive() {
   }

   //==========================================================
   // <T>取消激活处理。</T>
   //==========================================================
   public deactive() {
      if (this.statusActive) {
         this.onDeactive();
         this.statusActive = false;
      }
   }

   //==========================================================
   // <T>改变大小事件</T>
   //==========================================================
   public onResize(sender, event) {
   }

   //==========================================================
   // <T>逻辑处理。</T>
   //==========================================================
   public onProcess() {
   }

   //==========================================================
   // <T>逻辑处理。</T>
   //==========================================================
   public process() {
      if (this.statusActive) {
         this.onProcess();
      }
   }
}
